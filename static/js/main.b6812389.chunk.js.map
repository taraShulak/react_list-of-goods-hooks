{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","SORT_FIELD_NAME","Name","SORT_FIELD_LENGTH","Length","App","sortField","setSortField","useState","Defoult","isReversed","setIsReversed","renderGoods","goods","prepareGoods","sort","good1","good2","length","localeCompare","reverse","getPrepareGoods","_jsxs","className","children","_jsx","type","cn","onClick","prevIsReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"wOAKKA,EAAQ,SAARA,GAAQ,OAARA,IAAQ,qBAARA,IAAQ,eAARA,IAAQ,mBAARA,CAAQ,EAARA,GAAQ,IAMN,MAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4BF,EAASG,KACrCC,EAA8BJ,EAASK,OA+BtC,MAAMC,EAAgBA,KAC3B,MAAOC,EAAWC,GAAgBC,mBAAST,EAASU,UAC7CC,EAAYC,GAAiBH,oBAAS,GACvCI,EAhCR,SACEC,EACAP,EACAI,GAEA,IAAII,EAAe,IAAID,GAqBvB,OAnBIP,GACFQ,EAAaC,MAAK,CAACC,EAAOC,KACxB,OAAQX,GACN,KAAKH,EACH,OAAOa,EAAME,OAASD,EAAMC,OAE9B,KAAKjB,EACH,OAAOe,EAAMG,cAAcF,GAE7B,QACE,OAAO,EACX,IAIAP,IACFI,EAAeA,EAAaM,WAGvBN,CACT,CAKsBO,CAAgBrB,EAAiBM,EAAWI,GAOhE,OACEY,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,UAAW,CACjC,WACErB,IAAcP,EAASG,OAE3B0B,QAASA,IAAMrB,EAAaR,EAASG,MAAMsB,SAC5C,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,aAAc,CACpC,WACErB,IAAcP,EAASK,SAE3BwB,QAASA,IAAMrB,EAAaR,EAASK,QAAQoB,SAC9C,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,aAAc,CAAE,YAAajB,IACrDkB,QAASA,IAAMjB,GAAckB,IAAmBA,IAAgBL,SACjE,aAICd,GAAcJ,IAAcP,EAASU,UACrCgB,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QA1CV,WACEjB,GAAc,GACdJ,EAAaR,EAASU,QACxB,EAuC4Be,SACnB,aAMLC,cAAA,MAAAD,SACGZ,EAAYkB,KAAIC,GACfN,cAAA,MACE,UAAQ,OAAMD,SAGbO,GAFIA,SAOP,ECtHVC,IAASC,OACPR,cAACpB,EAAG,IACJ6B,SAASC,eAAe,Q","file":"static/js/main.b6812389.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nenum SortType {\n  Defoult,\n  Name,\n  Length,\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME: SortType = SortType.Name;\nconst SORT_FIELD_LENGTH: SortType = SortType.Length;\n\nfunction getPrepareGoods(\n  goods: string[],\n  sortField: SortType,\n  isReversed: boolean,\n) {\n  let prepareGoods = [...goods];\n\n  if (sortField) {\n    prepareGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    prepareGoods = prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.Defoult);\n  const [isReversed, setIsReversed] = useState(false);\n  const renderGoods = getPrepareGoods(goodsFromServer, sortField, isReversed);\n\n  function getReset() {\n    setIsReversed(false);\n    setSortField(SortType.Defoult);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light':\n              sortField !== SortType.Name,\n          })}\n          onClick={() => setSortField(SortType.Name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light':\n              sortField !== SortType.Length,\n          })}\n          onClick={() => setSortField(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(prevIsReversed => !prevIsReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortField !== SortType.Defoult) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={getReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {renderGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}